server {
    listen 80;
    server_name t2m.vn;
    return 301 https://$server_name$request_uri; # Redirect HTTP to HTTPS
}


upstream backend_server {
    server backend:8000; # Địa chỉ của server backend
}

upstream frontend_server {
    server frontend:3000; # Địa chỉ của server frontend
}

server {
    listen 443 ssl;
    server_name t2m.vn;

    ssl_certificate /etc/nginx/ssl/t2m_vn_cert.pem;
    ssl_certificate_key /etc/nginx/ssl/t2m_vn.key; # Đường dẫn đến private key của bạn
    ssl_trusted_certificate /etc/nginx/ssl/Chain_RootCA_Bundle.crt;
    
    # SSL configuration
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem; # You should generate this file using openssl
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256';
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_stapling on;
    ssl_stapling_verify on;

    location / {
        proxy_pass http://frontend_server; # Sử dụng upstream cho frontend
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location /api/ {
        proxy_pass http://backend_server; # Sử dụng upstream cho backend

        proxy_http_version 1.1;
        
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}
